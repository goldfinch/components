const u=t=>t.toString().slice(1,-1),w=u(/((?:[,\s]+(?:[a-z0-9\-_]+)=(?:(?:[a-z0-9\-_]+)|(?:\d+\.\d+)|(?:'[^']*')|(?:"[^"]*")))*)/),f=/[,\s]+([a-z0-9\-_]+)=(?:([a-z0-9\-_]+)|(\d+\.\d+)|(?:'([^']*)')|(?:"([^"]*)"))/,E=u(/\[%s/),k="\\]",T=u(/\[\s*\/\s*%s\s*]/),_=u(/((?:.|\n|)*?)/),D=u(/\s*/),y={match(t,s,c){let i=`${i18n.sprintf(E,t)}${w}${D}${k}`;s&&(i=`${i}${_}${i18n.sprintf(T,t)}`);const d=new RegExp(i,"i").exec(c);if(!d)return null;const b=this.parseProperties(d[1]);return{name:t,wrapped:s,properties:b,original:d[0],content:s?d[2]:null}},parseProperties(t){let s=t;const c={};let o=s.match(f);for(;o;){const i=o[1]||"",l=o[2]||o[3]||o[4]||o[5]||"";i&&(c[i]=l);const d=s.indexOf(o[0]);s=s.substr(d+o[0].length),o=s.match(f)}return c},serialise(t,s=!1){const c=s?{sep:",",quote:"",replacer:/[^a-z0-9\-_.]/gi}:{sep:" ",quote:'"',replacer:/"/g},o=Object.entries(t.properties).map(([i,l])=>l?`${c.sep}${i}=${c.quote}${`${l}`.replace(c.replacer,"")}${c.quote}`:null).filter(i=>i!==null).join("");return t.wrapped?`[${t.name}${o}]${t.content}[/${t.name}]`:`[${t.name}${o}]`}},S=()=>{const t=document.createElement("div");return s=>s===void 0?"":(t.textContent=s,t.innerHTML)},R=t=>{const s=S();return Object.entries(t).reduce((c,[o,i])=>({...c,[o]:s(i)}),{})},C=async function(t,s){const c=await fetch(t,{method:"POST",headers:{"X-CSRF-TOKEN":window.ss.config.SecurityID},body:s});if(!c.ok)throw new Error("Fetch request failed");return c.json()};tinymce.PluginManager.add("customplugin",(t,s)=>{var c,o,i;t.addCommand("cc-delete",()=>{const e=t.selection.getNode();t.dom.is(e,h)?e.remove():t.dom.is(e.parentNode,h)?e.parentNode.remove():console.error({error:"Unexpected selection - expected embed",selectedNode:e})});const l={title:"Content Components",body:{type:"panel",items:[{type:"htmlpanel",html:"<p>Please, select type of component you would like to add</p><p></p>"},{type:"listbox",name:"component",label:"Component",enabled:!1,items:[{text:"-",value:"-"}]}]},initialData:{},buttons:[{type:"custom",name:"action_next",text:"Next",enabled:!1}],onChange:(e,n)=>{const r=e.getData();e.setEnabled("action_next",r.component)},onAction:async(e,n)=>{n.name==="action_next"&&(e.block("Loading"),g(e))}},d={title:"Content Components",body:{type:"panel",items:[{type:"htmlpanel",html:"<p>Now, select the actual component you would like to be used</p><p></p>"},{type:"listbox",name:"component",label:"Component",enabled:!1,items:[{text:"-",value:"-"}]}]},buttons:[{type:"custom",name:"action_back",text:"Back",enabled:!0},{type:"custom",name:"action_insert",text:"Insert",enabled:!1}],initialData:{},onChange:(e,n)=>{const r=e.getData();e.setEnabled("action_insert",r.component)},onAction:async(e,n)=>{if(n.name==="action_back")e.block("Loading"),b(e);else if(n.name==="action_insert"){const m=e.getData();var r=Object.keys(o).find(p=>o[p].value===c),a=Object.keys(i).find(p=>i[p].value===m.component);tinymce.activeEditor.execCommand("mceInsertContent",!1,`[contentblock class="gf-component" data-class="${c}" data-id="${m.component}" data-bn="${o[r].text}" data-n="${i[a].text}"].[/contentblock]`),e.close()}}},b=async e=>{const n=new FormData;n.append("name",t.targetElm.getAttribute("name")),n.append("class",t.targetElm.getAttribute("data-based-on-class"));try{const a=await C("/api/component/types",n);var r=l;r.body.items[1].enabled=!0,r.body.items[1].items=a,o=a,e.redial(r),e.unblock()}catch{}},g=async e=>{c=e.getData().component;const n=new FormData;n.append("name",t.targetElm.getAttribute("name")),n.append("class",t.targetElm.getAttribute("data-based-on-class")),n.append("component",c);try{const a=await C("/api/component/objects",n);i=a;var r=d;r.body.items[1].enabled=!0,r.body.items[1].items=a,e.unblock(),e.redial(r)}catch{}};t.ui.registry.addButton("customDropdown",{icon:"sharpen",onAction:async()=>{var e=t.windowManager.open(l);return e.block("Loading"),b(e),e}});const h='div[data-shortcode="contentblock"]';return t.ui.registry.addButton("ccdelete",{tooltip:"Delete content block",icon:"remove",onAction:()=>t.execCommand("cc-delete")}),t.ui.registry.addContextToolbar("customplugin",{predicate:e=>t.dom.is(e,h),position:"node",scope:"node",items:"ccdelete"}),t.on("GetContent",e=>{const n=jQuery(`<div>${e.content}</div>`);n.find(h).each(function(){const a=jQuery(this),m=a.data("id"),p=a.data("class"),x=a.data("n"),O=a.data("bn"),$=R({"data-id":m,"data-class":p,"data-n":x,"data-bn":O,class:a.prop("class")}),v=y.serialise({name:"contentblock",properties:$,wrapped:!0,content:""});a.replaceWith(v)}),e.content=n.html()}),t.on("BeforeSetContent",e=>{let n=e.content,r=y.match("contentblock",!0,n);for(;r;){const a=r.properties,m=jQuery("<div/>").attr("data-id",a["data-id"]).attr("data-class",a["data-class"]).attr("data-n",a["data-n"]).attr("data-bn",a["data-bn"]).attr("data-shortcode","contentblock").addClass(a.class);m.html('<img src="/_resources/vendor/goldfinch/components/client/dist/images/component.svg" width="">'),n=n.replace(r.original,jQuery("<div/>").append(m).html()),r=y.match("contentblock",!0,n)}e.content=n}),{getMetadata:()=>({name:"Goldfinch Components",url:"https://github.com/goldfinch/components"})}});
